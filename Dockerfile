# Build stage
FROM node:16.16-slim@sha256:e9dbce470d22c34e5cc91e305f5ad3fd14b3f02e36fd8a7746e3e5a9e4de4655 as build_env

## Install dependencies
WORKDIR /app
COPY package.json /app/

RUN apt-get update && apt-get install -y --no-install-recommends \
    protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

RUN npm install

## Copy source codes and documents
COPY scan.proto tsconfig.json LICENSE README.md /app/
COPY src/ /app/src/

## Generate protobuf file
RUN ./node_modules/.bin/grpc_tools_node_protoc \
    --js_out=import_style=commonjs,binary:./src/lib \
    --grpc_out=grpc_js:./src/lib \
    --plugin=protoc-gen-grpc=./node_modules/.bin/grpc_tools_node_protoc_plugin \
    ./scan.proto

RUN protoc \
    --plugin=protoc-gen-ts=./node_modules/.bin/protoc-gen-ts \
    --ts_out=grpc_js:./src/lib \
    ./scan.proto

## Compile TypeScript files
RUN ./node_modules/.bin/tsc --build

## Copy JavaScript and TypeScript protobuf and project basic files
RUN cp src/lib/scan_*pb.js src/lib/scan_*pb.d.ts ./output/lib

## Copy package.json and documents
RUN cp package.json LICENSE README.md ./output

FROM build_env as unit_test

ARG TM_AM_LOG_LEVEL

COPY jest.config.ts /app/
COPY __tests__ /app/__tests__/

## Run tests
RUN TM_AM_LOG_LEVEL=${TM_AM_LOG_LEVEL} npm test

## Publish package
FROM node:16.16-slim@sha256:e9dbce470d22c34e5cc91e305f5ad3fd14b3f02e36fd8a7746e3e5a9e4de4655

ARG PACK_CMD
ARG NODE_AUTH_TOKEN

ENV NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN}

WORKDIR /app

COPY --from=build_env /app/output /app

RUN npm ${PACK_CMD}
