import { APIGatewayProxyEvent, APIGatewayProxyResult } from "aws-lambda";
import * as fs from "fs";

import {
  AmaasGrpcClient,
  AmaasCredentials,
} from "@amaas/amaas-grpc-node-client";

/**
 * Handle environment variables.
 */
const amaasHostName = process.env?.TM_AM_SERVER_ADDR || "";
const creds: AmaasCredentials = {
  credsType: process.env?.TM_AM_AUTH_KEY_TYPE === "token" ? "token" : "apikey",
  secret: process.env?.TM_AM_AUTH_KEY || "",
};

/**
 * runScanAsyncAmaasGrpcClient() - run single file scan.
 * Initialize a scan client class using AmaasGrpcClient() and use AmaasGrpcClient.scanFile() to scan file.
 * @param {string} filePath the file path to scan
 * @return {Promise} void
 */
const runScanAsyncAmaasGrpcClient = async (filePath: string): Promise<void> => {
  const amaasGrpcClient = new AmaasGrpcClient(amaasHostName, creds);

  if (amaasGrpcClient) {
    await amaasGrpcClient.scanFile(filePath).then(
      (result) => {
        console.log(
          `runScanAsyncAmaasGrpcClient result:  ${JSON.stringify(result)}`
        );
        amaasGrpcClient.close();
      },
      (reason) => {
        throw reason;
      }
    );
  }
};

/**
 * runBatchScanAmaasGrpcClient() - run concurrent file scan.
 * Initialize a scan client class using AmaasGrpcClient() and use AmaasGrpcClient.scanFile() to scan file.
 * @param {string} pathName the folder path which contains the files to scan
 * @return {Promise} void
 */
const runBatchScanAmaasGrpcClient = async (pathName: string): Promise<void> => {
  const amaasGrpcClient = new AmaasGrpcClient(amaasHostName, creds);

  if (amaasGrpcClient) {
    if (pathName.charAt(pathName.length - 1) !== "/") {
      pathName += "/";
    }
    const fileNames = fs
      .readdirSync(pathName, { withFileTypes: true })
      .filter((item) => !item.isDirectory())
      .map((item) => `${pathName}${item.name}`);

    const actions = fileNames.map((fileName) => {
      return amaasGrpcClient.scanFile(fileName);
    });

    await Promise.all(actions).then(
      (results) => {
        console.log("runBatchScanAmaasGrpcClient result:");
        results.forEach((result) => {
          console.log(JSON.stringify(result));
        });
        amaasGrpcClient.close();
      },
      (reason) => {
        throw reason;
      }
    );
  }
};

export const handler = async (
  event: APIGatewayProxyEvent
): Promise<APIGatewayProxyResult> => {
  await runScanAsyncAmaasGrpcClient("index.js.map");
  await runBatchScanAmaasGrpcClient("./");

  return {
    statusCode: 200,
    body: JSON.stringify("AMAAS Node Client SDK Scan Done!"),
  };
};
