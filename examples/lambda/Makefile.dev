IMAGE_NAME := ts-examples-lambda:latest

TM_AM_NODE_JS_PKG ?=
TM_AM_TYPES_PKG ?=
TM_AM_TS_FILE ?= fileScan

all: build

prebuild:
	rm -rf dist node_modules
	rm -f package-lock.json
	cp ../../output/pkg/$(TM_AM_NODE_JS_PKG) ../../output/types/$(TM_AM_TYPES_PKG) .
	npm install $(TM_AM_NODE_JS_PKG)
	npm install -D $(TM_AM_TYPES_PKG)

build: prebuild
	docker build \
		-t $(IMAGE_NAME) \
		--build-arg TM_AM_NODE_JS_PKG=$(TM_AM_NODE_JS_PKG) \
		--build-arg TM_AM_TYPES_PKG=$(TM_AM_TYPES_PKG) \
		--build-arg TM_AM_TS_FILE=$(TM_AM_TS_FILE) \
		.
	mkdir -p dist
	docker run --rm $(IMAGE_NAME) tar -cz dist/index.zip | tar xzf - -C .
	rm -rf node_modules
	rm -f package-lock.json $(TM_AM_NODE_JS_PKG) $(TM_AM_TYPES_PKG)

clean:
	-@docker rmi $(IMAGE_NAME) || true

.PHONY: all prebuild build clean
